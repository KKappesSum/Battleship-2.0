c817l905@cycle3:~/eecs448/p2-repo$ valgrind --leak-check=full ./Battleship
==31287== Memcheck, a memory error detector
==31287== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==31287== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==31287== Command: ./Battleship
==31287==


  ____        _   _   _           _     _
 |  _ \      | | | | | |         | |   (_)
 | |_) | __ _| |_| |_| | ___  ___| |__  _ _ __
 |  _ < / _` | __| __| |/ _ \/ __| '_ \| | '_ \
 | |_) | (_| | |_| |_| |  __/\__ \ | | | | |_) |
 |____/ \__,_|\__|\__|_|\___||___/_| |_|_| .__/
                                         | |
                                         |_|

Menu:
 1) Instructions
 2) Start Game: Player vs. Player
 3) Start Game: Player vs. AI
 4) Quit Game
 5) Resume Saved Game

Enter option (1-5): 3
Starting a Player vs. AI game!
Choose a difficulty level for the AI.
1) Easy
2) Medium
3) Hard
Your choice: 1

How many ships would you like to play with? (1-5 ships): 1

Player 1: It's time to place your ships.

        A       B       C       D       E       F       G       H
1       ~       ~       ~       ~       ~       ~       ~       ~
2       ~       ~       ~       ~       ~       ~       ~       ~
3       ~       ~       ~       ~       ~       ~       ~       ~
4       ~       ~       ~       ~       ~       ~       ~       ~
5       ~       ~       ~       ~       ~       ~       ~       ~
6       ~       ~       ~       ~       ~       ~       ~       ~
7       ~       ~       ~       ~       ~       ~       ~       ~
8       ~       ~       ~       ~       ~       ~       ~       ~

        A       B       C       D       E       F       G       H
1       ~       ~       ~       ~       ~       ~       ~       ~
2       ~       ~       ~       ~       ~       ~       ~       ~
3       ~       ~       ~       ~       ~       ~       ~       ~
4       ~       ~       ~       ~       ~       ~       ~       ~
5       ~       ~       ~       ~       ~       ~       ~       ~
6       ~       ~       ~       ~       ~       ~       ~       ~
7       ~       ~       ~       ~       ~       ~       ~       ~
8       ~       ~       ~       ~       ~       ~       ~       ~

It's time to place your ship of size 1x1. Enter a starting coordinate
Please enter a coordinate in the form 1A: 1G
terminate called after throwing an instance of 'std::out_of_range'
  what():  basic_string::at: __n (which is 2) >= this->size() (which is 2)
==31287==
==31287== Process terminating with default action of signal 6 (SIGABRT)
==31287==    at 0x541BE97: raise (raise.c:51)
==31287==    by 0x541D800: abort (abort.c:79)
==31287==    by 0x4EC8956: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x4ECEAB5: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x4ECEAF0: std::terminate() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x4ECED23: __cxa_throw (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x4ECA854: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x4F612CE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::at(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x10C9E8: Executive::placeShip(int, Admiral*, bool) (Executive.cpp:288)
==31287==    by 0x11184F: Executive::setupGame(bool) (Executive.cpp:1107)
==31287==    by 0x10E9BA: Executive::run() (Executive.cpp:536)
==31287==    by 0x10B42B: main (main.cpp:23)
==31287==
==31287== HEAP SUMMARY:
==31287==     in use at exit: 4,768 bytes in 22 blocks
==31287==   total heap usage: 26 allocs, 4 frees, 79,552 bytes allocated
==31287==
==31287== 144 bytes in 1 blocks are possibly lost in loss record 6 of 8
==31287==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31287==    by 0x4ECD8EF: __cxa_allocate_exception (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x4EF724A: std::__throw_out_of_range_fmt(char const*, ...) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x4F612CE: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::at(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25)
==31287==    by 0x10C9E8: Executive::placeShip(int, Admiral*, bool) (Executive.cpp:288)
==31287==    by 0x11184F: Executive::setupGame(bool) (Executive.cpp:1107)
==31287==    by 0x10E9BA: Executive::run() (Executive.cpp:536)
==31287==    by 0x10B42B: main (main.cpp:23)
==31287==
==31287== LEAK SUMMARY:
==31287==    definitely lost: 0 bytes in 0 blocks
==31287==    indirectly lost: 0 bytes in 0 blocks
==31287==      possibly lost: 144 bytes in 1 blocks
==31287==    still reachable: 4,624 bytes in 21 blocks
==31287==                       of which reachable via heuristic:
==31287==                         stdstring          : 88 bytes in 1 blocks
==31287==                         newarray           : 4,224 bytes in 16 blocks
==31287==         suppressed: 0 bytes in 0 blocks
==31287== Reachable blocks (those to which a pointer was found) are not shown.
==31287== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31287==
==31287== For counts of detected and suppressed errors, rerun with: -v
==31287== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
Aborted (core dumped)
c817l905@cycle3:~/eecs448/p2-repo$